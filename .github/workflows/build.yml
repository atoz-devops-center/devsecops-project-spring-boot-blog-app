---
name: DevSecOps Pipeline
on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 17
      
      - name: get new version
        id: version
        run: |
          current_version="$(cat version)"
          new_version="$(echo "$current_version" | awk -F. '{$3 = $3 + 1;} 1' OFS=".")"
          echo "$new_version" > version
          echo "VERSION=$new_version" >> "$GITHUB_OUTPUT"
      
      - name: Build
        env:
            DATA_CREATOR_SECRET: ${{ secrets.DATA_CREATOR_SECRET }}
        run: mvn --batch-mode -DskipTests package

      - name: Test
        env:
          DATA_CREATOR_SECRET: ${{ secrets.DATA_CREATOR_SECRET }}
        run: mvn --batch-mode -Dmaven.test.failure.ignore=true test                    

  Dependency-Cheker:
    needs: [build]
    name: OWASP Dependency Cheker
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Dependency-Check Run
        env:
          # actions/setup-java changes JAVA_HOME so it needs to be reset to match the dependency-check docker image
          JAVA_HOME: /opt/jdk
        uses: dependency-check/Dependency-Check_Action@main
        id: dependency-check
        with:
          project: 'OWASP Security Shepherd'
          path: '.'
          format: 'HTML'
          args: >
            --format JSON
            --prettyPrint

      - name: Publish Dependency-Check Results
        uses: actions/upload-artifact@master
        with:
           name: dependency_check_report
           path: ${{github.workspace}}/reports
  
  sonarqube-analysis:
    needs: [build, Dependency-Cheker]
    name: Sonarqube Analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 17
      
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          DATA_CREATOR_SECRET: ${{ secrets.DATA_CREATOR_SECRET }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        # Force to fail step after specific time.
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  
  snyk-opensource-security:
    needs: [build, Dependency-Cheker]
    name: Snyk Test
    runs-on: ubuntu-latest  
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/maven@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  snyk-code-security:
    needs: [snyk-opensource-security]
    name: Snyk Test
    runs-on: ubuntu-latest  
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/maven@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
         command: code test

  snyk-opensource-monitor:
    needs: [snyk-opensource-security]
    name: Snyk Test
    runs-on: ubuntu-latest  
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/maven@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
         command: monitor